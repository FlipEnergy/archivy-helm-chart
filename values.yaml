# Default values for archivy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: uzayg/archivy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# https://github.com/archivy/archivy-docker
env:
  FLASK_DEBUG: 0
  ELASTICSEARCH_ENABLED: 1
  ELASTICSEARCH_URL: http://elasticsearch:9200/

# Both persistence must be on for archivy to keep state between deploys
persistence:
  # db stores the config and the database for archivy
  db:
    volume:
      enabled: false
      path: /path/to/hostpath2
      server: myserver
      storageClass: ''
      size: 1Gi
    volumeClaim:
      enabled: false
      storageClass: ''
      size: 1Gi
  # data stores the markdown files for archivy
  data:
    volume:
      enabled: false
      path: /path/to/hostpath
      server: myserver
      storageClass: ''
      size: 10Gi
    volumeClaim:
      enabled: false
      storageClass: ''
      size: 10Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

elasticsearch:
  enabled: false

  masterService: 'elasticsearch'

  replicas: 1
  minimumMasterNodes: 1

  esJavaOpts: "-Xmx1g -Xms1g"

  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "500m"
      memory: "2Gi"

  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    # storageClassName:
    resources:
      requests:
        storage: 10Gi

  rbac:
    create: false
    serviceAccountAnnotations: {}
    serviceAccountName: ""

  persistence:
    enabled: true
    labels:
      # Add default labels for the volumeClaimTemplate of the StatefulSet
      enabled: false
    annotations: {}

  # https://www.elastic.co/guide/en/elasticsearch/reference/7.10/cluster-health.html#request-params wait_for_status
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"

  nodeSelector: {}
